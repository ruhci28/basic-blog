{"version":3,"sources":["actions/index.js","components/Navbar.jsx","components/singlepost.jsx","components/allpost.jsx","components/createpost.jsx","components/updatepost.jsx","components/likepost.jsx","components/dislike.jsx","App.js","reducers/posttoupdate.js","reducers/updatedPost.js","reducers/allpost.js","reducers/search.js","reducers/searchmode.js","reducers/filterpost.js","reducers/index.js","index.js"],"names":["setallpost","posts","type","payload","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","NavBar","classes","history","useHistory","React","useState","hint","sethint","allpost","useSelector","state","dispatch","useDispatch","handleChange","event","mode","target","value","push","turnoffsearchmode","searchterm","filterposts","filter","post","JSON","stringify","toLowerCase","includes","console","log","filterpost","className","AppBar","Toolbar","IconButton","edge","aria-label","Typography","variant","noWrap","exact","to","activeClassName","InputBase","onChange","placeholder","input","inputProps","maxWidth","avatar","red","SinglePost","props","like","setlike","dislike","unlike","setUnlike","user","userId","body","Card","style","margin","float","CardHeader","Avatar","CardContent","component","CardActions","disableSpacing","onClick","updatedarray","temp","removelikepost","likepost","removedislikepost","updatedarray2","dislikepost","axios","delete","id","then","res","catch","err","tempUser","tempPost","deletepost","AllPost","searchmode","filteredpost","map","index","key","CreatePost","liked","setpost","persist","name","prevValue","onSubmit","preventDefault","handlesubmit","TextField","fullWidth","multiline","rows","Button","UpdatePost","posttoupdate","handleSubmit","patch","currpost","temp2","updatedpost","LikePost","DisLikePost","App","useEffect","get","data","path","EditPost","DislikePost","posttoupdateReducer","action","updatePostReducer","allPostReducer","searchReducer","searchmodeReducer","newState","state1","state2","Object","assign","filterPostReducer","rootReducer","combineReducers","updateReducer","updatePost","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.38f83da5.chunk.js","sourcesContent":["export const posttoupdate = (posttoupdate) => {\n  return {\n    type:'POSTTOUPDATE',\n    payload:posttoupdate\n  }\n}\nexport const updatedpost = (post) => {\n  return {\n    type:'UPDATEDPOST',\n    payload:post\n  }\n}\n // export const likedpost = (post) => {\n //   return {\n //     type:'LIKEPOST',\n //     payload:post\n //   }\n // }\n // export const unlikelikedpost = (post) => {\n //   return {\n //     type:'REMOVELIKEDPOST',\n //     payload:post\n //   }\n // }\n // export const dislikedpost = (post) => {\n //   return {\n //     type:'DISLIKEPOST',\n //     payload:post\n //   }\n // }\n // export const removedislikedpost = (post) => {\n //   return {\n //     type:'REMOVEDISLIKEDPOST',\n //     payload:post\n //   }\n // }\nexport const setallpost = (posts) => {\n  return {\n    type:'ALLPOST',\n    payload:posts\n  }\n}\nexport const filteredpost = (posts) => {\n  return {\n    type:'FILTERPOST',\n    payload:posts\n  }\n}\nexport const searchterm = (hint) => {\n  return {\n    type:'SEARCH',\n    payload:hint\n  }\n}\n// action to turn on the editmode\nexport const turnonsearchmode = (mode) => {\n  return {\n    type:'TURNONSEARCHMODE',\n    payload:mode\n  }\n}\n// action to turn off  the edit mode\nexport const turnoffsearchmode = (mode) => {\n  return {\n    type:'TURNOFFSEARCHMODE',\n    payload:mode\n  }\n}\n","import React from 'react';\nimport {useHistory} from 'react-router-dom';\nimport {useSelector,useDispatch} from 'react-redux';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport HomeIcon from '@material-ui/icons/Home';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport {NavLink} from 'react-router-dom';\nimport {searchterm,turnonsearchmode,turnoffsearchmode,filteredpost} from '../actions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n}));\n\nexport default function NavBar() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [hint ,sethint] = React.useState('');\n  const allpost = useSelector(state => state.allpost);\n  const dispatch = useDispatch();\n// handle changes in searchbar it on the searchmode if searchbar contain some text and\n// turn off serachmode if searchbar is empty. It also call filterpost function which\n // filters the post according to the text wriiten in searchbar\n  function handleChange(event) {\n    if(event.target.value){\n      dispatch(turnonsearchmode());\n      history.push('/');\n    }else{\n      dispatch(turnoffsearchmode());\n    }\n    sethint(event.target.value);\n    dispatch(searchterm(event.target.value));\n    filterpost();\n  }\n  // function to filter the posts that contain the spicific text written in the searchbar.\n  function filterpost(){\n    const filterposts = allpost.filter(post => JSON.stringify(post).toLowerCase().includes(hint.toLowerCase()));\n    console.log(filterposts);\n    dispatch(filteredpost(filterposts));\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            CEA Assignment\n          </Typography>\n          <NavLink  exact  to=\"/\" activeClassName=\"activelink\" className=\"headerlink\">\n          <HomeIcon />\n          </NavLink>\n          <NavLink  exact  to=\"/create\" activeClassName=\"activelink\" className=\"headerlink\">\n          <AddCircleIcon />\n          </NavLink>\n          <NavLink  exact activeClassName=\"activelink\" to=\"/likepost\" className=\"headerlink\">\n          <FavoriteIcon />\n          </NavLink>\n          <NavLink  exact activeClassName=\"activelink\" to=\"/dislikepost\" className=\"headerlink\">\n          <ThumbDownIcon />\n          </NavLink>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n            onChange={(event)=>{handleChange(event)}}\n            value={hint}\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n             inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React,{ useState } from 'react';\nimport axios from 'axios';\nimport { useSelector , useDispatch } from 'react-redux';\nimport {useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport ThumbsUpDownIcon from '@material-ui/icons/ThumbsUpDown';\nimport {posttoupdate,setallpost} from '../actions'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  avatar: {\n    backgroundColor: red[500],\n  }\n}));\n\nfunction SinglePost (props) {\n  const classes = useStyles();\n  const allpost = useSelector(state => state.allpost);\n  const [like,setlike] = useState(props.like || false );\n  const [unlike,setUnlike] = useState(props.dislike||false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const user = {\n    userId:props.userId,\n    title:props.title,\n    body:props.body\n  }\n// function to like the post. this function change like property of the post to true.\n  function likepost () {\n    setlike(true);\n    const value = allpost;\n    const updatedarray = value.filter(post => {\n      const temp = {userId:post.userId,\n      title:post.title,\n      body:post.body}\n      if(JSON.stringify(temp) !== JSON.stringify(user)){\n      return post;\n    }else {\n      post.like=true;\n      return post;\n    }\n  });\n  dispatch(setallpost(updatedarray));\n};\n// function to remove like from  the post. this function change like property of the post to false. Thus the post is no longer liked.\n function removelikepost () {\n   setlike(false);\n   const value = allpost;\n   const updatedarray = value.filter(post => {\n     const temp = {userId:post.userId,\n     title:post.title,\n     body:post.body}\n     if(JSON.stringify(temp) !== JSON.stringify(user)){\n     return post;\n   }else {\n     post.like=false;\n     return post;\n   }\n   });\n   dispatch(setallpost(updatedarray));\n }\n// function to dislike the post. this function change dislike property of the post to true.\n function dislikepost() {\n   setUnlike(true);\n   const value = allpost;\n   const updatedarray2 = value.filter(post => {\n     const temp = {userId:post.userId,\n     title:post.title,\n     body:post.body};\n     if(JSON.stringify(temp) !== JSON.stringify(user)){\n     return post;\n   }else {\n     post.dislike=true;\n     return post;\n   }\n   });\n   dispatch(setallpost(updatedarray2));\n }\n // function to remove dislike from  the post. this function change dislike property of the post to false.\n // Thus the post is no longer disliked.\n function removedislikepost() {\n   setUnlike(false);\n   const value = allpost;\n   const updatedarray = value.filter(post => {\n     const temp = {userId:post.userId,\n     title:post.title,\n     body:post.body}\n     if(JSON.stringify(temp) !== JSON.stringify(user)){\n     return post;\n   }else {\n     post.dislike=false;\n     return post;\n   }\n });\n dispatch(setallpost(updatedarray));\n }\n // this function makes a delete request to json placeholder api.\n // and also remove the particular post from allpost state. \n function deletepost() {\n   axios.delete('https://jsonplaceholder.typicode.com/posts/'+user.id)\n        .then(res => {})\n        .catch(err => {});\n        const value = allpost;\n        const tempUser = {userId:user.userId,title:user.title,body:user.body};\n        const updatedarray = value.filter(post => {\n          const tempPost = {userId:post.userId,title:post.title,body:post.body};\n        return  JSON.stringify(tempPost) !== JSON.stringify(tempUser)});\n        dispatch(setallpost(updatedarray));\n }\n  return (\n    <Card className={classes.root } style={{backgroundColor:'#d8d3cd', margin: '16px',float: 'left'}} >\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            {props.userId}\n          </Avatar>\n        }\n        title={props.title}\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {props.body}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n\n       <IconButton aria-label=\"add to favorites\">\n       {like ? <FavoriteIcon onClick={()=>{removelikepost()}}/> : <FavoriteBorderIcon onClick={()=>{likepost()}}/>}\n       </IconButton>\n       <IconButton aria-label=\"add to dislike\">\n       {unlike ? <ThumbDownIcon  onClick={() => {removedislikepost()}}/>:<ThumbsUpDownIcon onClick={()=>{dislikepost()}}/>}\n       </IconButton>\n        <IconButton aria-label=\"update\">\n          <UpdateIcon onClick={()=>{dispatch(posttoupdate(user));\n          history.push('/edit')}}/>\n        </IconButton>\n        <IconButton aria-label=\"delete\" onClick={()=>{deletepost()}}>\n          <DeleteIcon />\n        </IconButton>\n      </CardActions>\n    </Card>\n  );\n}\nexport default SinglePost;\n","import React from 'react';\nimport SinglePost from './singlepost.jsx';\nimport { useSelector } from 'react-redux';\n\nfunction AllPost () {\n  const searchmode = useSelector(state => state.searchmode.mode);\n  const filterpost = useSelector(state => state.filteredpost);\n  const allpost = useSelector(state => state.allpost);\n\n  return (\n    <div className='posts'>\n    {\n      // shows filterpost only when searchmode is on.\n      // when searchmode is off show all posts.\n      searchmode ? <span>\n      <h3>Filter Post</h3>\n      <div className=\"containpost\">\n       {\n         filterpost.map((post,index)=>{\n           return <SinglePost userId={post.userId} title={post.title} body={post.body} key={post.id} like={post.like || false} dislike={post.dislike||false}/>\n         })\n       }\n      </div>\n      </span>:<span>\n        <h3>All Post</h3>\n        <div className=\"containpost\">\n         {\n           allpost.map((post,index)=>{\n             return <SinglePost userId={post.userId} title={post.title} body={post.body} key={post.id} id={post.id} like={post.like || false} dislike={post.dislike||false}/>\n           })\n         }\n        </div>\n      </span>\n    }\n  </div>);\n}\nexport default AllPost;\n","import React from 'react';\nimport {useSelector,useDispatch} from 'react-redux';\nimport {useHistory} from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport {setallpost} from '../actions';\n\nfunction CreatePost () {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const allpost = useSelector(state=>state.allpost);\n  const [post,setpost] = React.useState({\n    userId:'',\n    title:'',\n    body:'',\n    liked:false,\n    dislike:false\n  })\n  // handle changes in input fields\n  function handleChange(event){\n    event.persist()\n    const {name,value} = event.target;\n    setpost((prevValue) => {\n      return {\n        ...prevValue,\n        [name]:value\n      }\n    });\n  }\n  // handle submission of the form. post a post request to the api and add the new post to allpost state also\n  function handlesubmit(event){\n    event.preventDefault();\n    axios.post('https://jsonplaceholder.typicode.com/posts',{userId:post.userId,title:post.title,body:post.body})\n    .then(res=>{\n      // console.log(res);\n      allpost.push(post);\n      dispatch(setallpost(allpost));\n      history.push('/');\n  })\n    .catch(err => {console.log(err)});\n\n  }\n  return (\n    <div className='container'>\n    <form onSubmit={(event)=>{handlesubmit(event)}}>\n         <label>UserId</label>\n         <TextField name=\"userId\" value={post.userId}  variant=\"outlined\" fullWidth onChange={handleChange}/>\n         <label>Title</label>\n         <TextField name='title' value={post.title} variant=\"outlined\" fullWidth onChange={handleChange}/>\n         <label>Post</label>\n         <TextField name='body' value={post.body} variant=\"outlined\" multiline rows={8} fullWidth onChange={handleChange}/>\n         <Button variant=\"contained\" color=\"primary\" type='submit'>\n          Create\n         </Button>\n    </form>\n    </div>);\n}\nexport default CreatePost;\n","import React from 'react';\nimport {useHistory} from 'react-router-dom';\nimport { useSelector , useDispatch } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\n\nimport {updatedpost,setallpost } from '../actions';\nfunction UpdatePost () {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const allpost = useSelector(state => state.allpost);\n  const posttoupdate = useSelector(state => state.posttoupdate);\n  const [post,setpost] = React.useState(posttoupdate);\n  function handleChange(event){\n    event.persist()\n    const {name,value} = event.target;\n    setpost((prevValue) => {\n      return {\n        ...prevValue,\n        [name]:value\n      }\n    });\n  }\n  // This function made a patch request to jsonplaceholder api to update the post.\n  // It also update the allpost state to see the updated post in ui.\n  function handleSubmit(event) {\n    event.preventDefault();\n    axios.patch('https://jsonplaceholder.typicode.com/posts/'+post.userId,post)\n    .then(res=>{console.log(res);\n      const value = allpost;\n      const updatedarray = value.map(currpost=>{\n        const temp = {userId:currpost.userId,\n        title:currpost.title,\n        body:currpost.body};\n        const temp2 = {\n          userId:posttoupdate.userId,\n          title:posttoupdate.title,\n          body:posttoupdate.body\n        }\n        if(JSON.stringify(temp2) !== JSON.stringify(temp)){\n          return currpost;\n        }else {\n          currpost.userId = post.userId;\n          currpost.title = post.title;\n          currpost.body = post.body;\n          return currpost;\n        }\n      });\n      dispatch(setallpost(updatedarray));\n    history.push('/');\n    dispatch(updatedpost(post));\n  })\n    .catch(err => {console.log(err)});\n  }\n  return (\n    <div className='container'>\n    <form onSubmit={(event)=>{handleSubmit()}}>\n         <label>UserId</label>\n         <TextField name=\"userId\" value={post.userId}  variant=\"outlined\" fullWidth onChange={handleChange}/>\n         <label>Title</label>\n         <TextField name='title' value={post.title} variant=\"outlined\" fullWidth onChange={event => handleChange(event)}/>\n         <label>Post</label>\n         <TextField name='body' value={post.body} variant=\"outlined\" multiline rows={8} fullWidth onChange={(event) => handleChange(event)}/>\n         <Button variant=\"contained\" color=\"primary\" type='submit' onClick={handleSubmit}>\n          Update\n          </Button>\n         <Button variant=\"contained\" color=\"primary\" style={{marginLeft:'20px'}} onClick={ (event) => {event.preventDefault(); history.push('/')}}>\n           Cancel\n          </Button>\n    </form>\n    </div>);\n}\nexport default UpdatePost;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport SinglePost from './singlepost.jsx';\n\nfunction LikePost () {\n  const allpost = useSelector(state => state.allpost);\n\n  return (\n    <div className='posts'>\n      <h3>Liked Post</h3>\n    <div className=\"containpost\">\n    {\n      // It shows only those post which have like property to be true. It filters all the liked post.\n      // Note: Try to use filter instead of map to filter the elements.\n      allpost.map(post => {\n      if(post.like){\n        return <SinglePost userId={post.userId} id={post.id} title={post.title} body={post.body} key={post.id} like={post.like || false} dislike={post.dislike||false}/>;\n      } else {\n        return '';\n      }\n      }\n    )}\n    </div>\n    </div>\n  );\n}\nexport default LikePost;\n","import React from 'react';\nimport SinglePost from './singlepost.jsx';\nimport { useSelector } from 'react-redux';\n\nfunction DisLikePost () {\n  const allpost = useSelector(state => state.allpost);\n\n  return (\n    <div className='posts'>\n      <h3>Disliked Post</h3>\n    <div className=\"containpost\">\n    {\n      // It shows only those post which have dislike property to be true. It filters all the disliked post.\n      // Note: Try to use filter instead of map to filter the elements.\n      allpost.map(post => {\n      if(post.dislike){\n        return   <SinglePost userId={post.userId} id={post.id} title={post.title} body={post.body} key={post.id} like={post.like || false} dislike={post.dislike||false} />\n      } else {\n        return '';\n      }\n     }\n    )}\n    </div>\n  </div>);\n}\nexport default DisLikePost;\n","import React,{useState,useEffect} from 'react';\nimport Navbar from './components/Navbar';\nimport AllPost from './components/allpost';\nimport CreatePost from './components/createpost';\nimport EditPost from './components/updatepost';\nimport LikePost from './components/likepost';\nimport DislikePost from './components/dislike';\nimport {BrowserRouter as Router ,Switch , Route} from 'react-router-dom';\nimport {useDispatch} from 'react-redux';\nimport {setallpost } from './actions';\nimport axios from 'axios';\nfunction App() {\n  const dispatch = useDispatch();\n  const [posts,setpost] = useState([]);\n  useEffect(()=>{axios.get('https://jsonplaceholder.typicode.com/posts')\n  .then(res => {\n    setpost(res.data);\n    // console.log(res.data);\n    dispatch(setallpost(res.data));\n  })\n  .catch(err => {\n    console.log(err);\n  })},[]);\n\n  return (\n    <div className=\"App\">\n      <Router>\n      <Navbar />\n      <Switch>\n      <Route path=\"/basic-blog\" exact component={AllPost} />\n      <Route path='/create' exact component={CreatePost} />\n      <Route path='/edit' exact component={EditPost} />\n      <Route path='/likepost' exact component={LikePost} />\n      <Route path='/dislikepost' exact component={DislikePost} />\n      </Switch>\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","\nconst posttoupdateReducer = (state =  {userId:'',id:'',title:'',body:''}, action ) => {\n  switch(action.type){\n    case 'POSTTOUPDATE':\n         return action.payload\n    default :\n         return state;\n  }\n};\nexport default posttoupdateReducer;\n","\nconst updatePostReducer = (state =  {userId:'',title:'',body:''}, action ) => {\n  switch(action.type){\n    case 'UPDATEDPOST':\n         return action.payload\n    default :\n         return state;\n  }\n};\nexport default updatePostReducer;\n","const allPostReducer = (state = [] , action ) => {\n  switch(action.type){\n    case 'ALLPOST':\n         return action.payload;\n    default :\n         return state;\n  }\n};\nexport default allPostReducer;\n","const searchReducer = (state = '' , action ) => {\n  switch(action.type){\n    case 'SEARCH':\n         return action.payload;\n    default :\n         return state;\n  }\n};\nexport default searchReducer;\n","// handle editmode state of the application initially editmode is false\nconst searchmodeReducer = (state = {mode:false}, action ) => {\n  switch(action.type){\n    case 'TURNONSEARCHMODE':\n         const newState = { ...state, mode: true };\n         return newState;\n    case 'TURNOFFSEARCHMODE':\n        const state1 = { ...state, mode: false};\n        return state1;\n    default :\n    const state2 =  Object.assign({}, state);\n    return state2;\n  }\n};\nexport default searchmodeReducer;\n","const filterPostReducer = (state = [] , action ) => {\n  switch(action.type){\n    case 'FILTERPOST':\n         return action.payload;\n    default :\n         return state;\n  }\n};\nexport default filterPostReducer;\n","import updateReducer from './posttoupdate';\nimport updatePost from './updatedPost';\n// import likedpost from './likedpost';\n// import dislikepost from './dislikedpost';\nimport allpost from './allpost';\nimport search from './search';\nimport searchmode from './searchmode';\nimport filterpost from './filterpost';\nimport {combineReducers} from 'redux';\n\n const rootReducer = combineReducers({\n   posttoupdate:updateReducer,\n   updatedpost:updatePost,\n   allpost:allpost,\n   searchterm:search,\n   searchmode:searchmode,\n   filteredpost:filterpost\n })\n export default rootReducer;\n // likedpost:likedpost,\n // dislikedpost:dislikepost,\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {createStore} from 'redux';\nimport rootReducer from './reducers'\nimport {Provider} from 'react-redux';\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n    </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}